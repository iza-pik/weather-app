{"version":3,"sources":["components/input-field/index.jsx","components/form/index.js","components/button/index.jsx","components/current-weather/index.jsx","constants/index.js","components/weather-card/index.jsx","components/forecast-weather/index.jsx","App.js","serviceWorker.js","index.js"],"names":["InputField","props","react_default","a","createElement","className","label","htmlFor","id","Object","assign","checked","type","name","minLength","maxLength","placeholder","value","onChange","onBlur","onSubmit","Form","children","Button","disabled","onClick","CurrentWeather","concat","city","data","main","temp","toFixed","units","src","weather","icon","alt","description","API_KEY","WeatherCard","moment","dt_txt","calendar","pressure","humidity","ForecastWeather","list","map","forecast","components_weather_card","App","state","loading","error","weatherData","currentWeather","forecastWeather","event","_this$setState","_this","setState","defineProperty","target","onChangeCheckbox","preventDefault","currentCity","fetch","then","response","ok","json","forecastData","components_form","this","components_input_field","components_button","components_current_weather","components_forecast_weather","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4ccf632.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./input-field.css\";\r\n\r\nconst InputField = props => (\r\n  <div className=\"Input-field\">\r\n    {props.label && <label htmlFor={props.id}>{props.label}</label>}\r\n    <input\r\n      checked={props.checked}\r\n      type={props.type}\r\n      id={props.id}\r\n      name={props.name}\r\n      minLength=\"4\"\r\n      maxLength=\"20\"\r\n      placeholder={props.placeholder}\r\n      value={props.value}\r\n      onChange={props.onChange}\r\n      onBlur={props.onBlur}\r\n      onSubmit={props.onSubmit}\r\n      {...props}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport \"./form.css\";\r\n\r\nconst Form = props => (\r\n  <form onSubmit={props.onSubmit} className={props.className}>\r\n    {props.children}\r\n  </form>\r\n);\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./button.css\";\r\n\r\nconst Button = props => (\r\n  <button\r\n    disabled={props.disabled}\r\n    type={props.type}\r\n    className={props.className}\r\n    onClick={props.onClick}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"./current-weather.css\";\r\n// import changeUnits from \"../../utilities/temperatureService\";\r\n\r\nconst CurrentWeather = props => {\r\n  return (\r\n    <div className=\"current-weather\">\r\n      <ul>\r\n        <li>{`Current weather in ${props.city}:`}</li>\r\n        <li>\r\n          {props.data.main.temp.toFixed(0)}\r\n          {props.units === \"metric\" ? \"°C\" : \"F\"}\r\n        </li>\r\n        <img\r\n          src={`http://openweathermap.org/img/w/${\r\n            props.data.weather[0].icon\r\n          }.png`}\r\n          alt={`${props.data.weather[0].description} in ${props.city}`}\r\n          className=\"weather-icon\"\r\n        />\r\n        <li>{props.data.weather[0].description}</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","export const API_KEY = \"847c4dda05c3a22fb02d777556a5510f\";\r\n","import React from \"react\";\r\nimport \"./weather-card.css\";\r\nimport * as moment from \"moment\";\r\n// import changeUnits from \"../../utilities/temperatureService\";\r\n\r\nconst WeatherCard = props => {\r\n  return (\r\n    <div className=\"weather-card\">\r\n      <div className=\"weather-card--header\">\r\n        {moment(props.weather.dt_txt).calendar()}\r\n      </div>\r\n      <div>\r\n        <ul className=\"weather-card--list-style\">\r\n          <li>{`Temperature: ${props.weather.main.temp.toFixed(0)}${\r\n            props.units === \"metric\" ? \"°C\" : \"F\"\r\n            // changeUnits()\r\n          }`}</li>\r\n          <li>{`Pressure: ${props.weather.main.pressure.toFixed(0)} hPa`}</li>\r\n          <li>{`Humidity: ${props.weather.main.humidity.toFixed(0)}%`}</li>\r\n          <img\r\n            src={`http://openweathermap.org/img/w/${\r\n              props.weather.weather[0].icon\r\n            }.png`}\r\n            alt={`${props.weather.weather[0].description} in ${props.city}`}\r\n            className=\"weather-icon\"\r\n          />\r\n          <li>{props.weather.weather[0].description}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React from \"react\";\r\nimport \"./forecast-weather.css\";\r\nimport WeatherCard from \"../weather-card\";\r\n\r\nconst ForecastWeather = props => {\r\n  return (\r\n    <div className=\"forecast-weather\">\r\n      <ul>\r\n        <li>{`Weather forecast for ${props.city}:`}</li>\r\n      </ul>\r\n      {props.data.list.map(forecast => (\r\n        <WeatherCard units={props.units} weather={forecast} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastWeather;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport InputField from \"./components/input-field\";\nimport Form from \"./components/form\";\nimport Button from \"./components/button\";\nimport CurrentWeather from \"./components/current-weather\";\nimport { API_KEY } from \"./constants\";\n// import { Celsius } from \"./constants\";\n// import { Fahrenheit } from \"./constants\";\nimport ForecastWeather from \"./components/forecast-weather\";\n\nclass App extends Component {\n  state = {\n    city: \"\",\n    loading: false,\n    error: null,\n    weatherData: null,\n    units: \"metric\",\n    currentWeather: true,\n    forecastWeather: true\n  };\n  onChange = event => {\n    // console.log(event.target);\n    this.setState({\n      [event.target.name || event.target.id]: event.target.value,\n      error: null\n    });\n  };\n  onChangeCheckbox = event => {\n    this.setState({\n      [event.target.id]: !this.state[event.target.id]\n    });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    this.setState({ loading: true, currentCity: this.state.city });\n    if (this.state.currentWeather)\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${\n          this.state.city\n        }&appid=${API_KEY}&units=${this.state.units}`\n      )\n        .then(response => {\n          if (!response.ok) {\n            return response\n              .json()\n              .then(json => this.setState({ error: json, loading: false }));\n          }\n          return response.json();\n        })\n        .then(json => {\n          this.setState({ weatherData: json, loading: false });\n        });\n    else this.setState({ weatherData: null });\n    if (this.state.forecastWeather)\n      fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${\n          this.state.city\n        }&appid=${API_KEY}&units=${this.state.units}`\n      )\n        .then(response => {\n          if (!response.ok) {\n            return response\n              .json()\n              .then(json => this.setState({ error: json, loading: false }));\n          }\n          return response.json();\n        })\n        .then(json => {\n          this.setState({ forecastData: json, loading: false });\n        });\n    else this.setState({ forecastData: null });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>What's the weather like?</h1>\n          <img\n            src=\"https://bit.ly/2UhPg06\"\n            alt=\"spinning sun\"\n            className=\"logo\"\n          />\n        </header>\n        <Form className=\"input-form\" onSubmit={this.onSubmit}>\n          <fieldset>\n            <label>City:</label>\n            <InputField\n              placeholder=\"Enter city\"\n              type=\"text\"\n              id=\"city\"\n              value={this.state.city}\n              onChange={this.onChange}\n            />\n          </fieldset>\n          <InputField\n            label=\"Current weather\"\n            id=\"currentWeather\"\n            checked={this.state.currentWeather}\n            type=\"checkbox\"\n            onChange={this.onChangeCheckbox}\n          />\n          <InputField\n            label=\"Weather forecast for the next 5 days\"\n            id=\"forecastWeather\"\n            checked={this.state.forecastWeather}\n            type=\"checkbox\"\n            onChange={this.onChangeCheckbox}\n          />\n          <InputField\n            label=\"Metric units\"\n            name=\"units\"\n            value=\"metric\"\n            id=\"metric\"\n            checked={\"metric\" === this.state.units}\n            type=\"radio\"\n            onChange={this.onChange}\n          />\n          <InputField\n            label=\"Imperial units\"\n            name=\"units\"\n            value=\"imperial\"\n            id=\"imperial\"\n            checked={\"imperial\" === this.state.units}\n            type=\"radio\"\n            onChange={this.onChange}\n          />\n          <Button\n            disabled={\n              this.state.loading ||\n              !this.state.city ||\n              (!this.state.currentWeather && !this.state.forecastWeather)\n            }\n            type=\"submit\"\n            className=\"submit-button\"\n          >\n            {this.state.loading ? \"Loading...\" : \"Submit\"}\n          </Button>\n        </Form>\n        {this.state.error && <p>Oops! Something's wrong!</p>}\n        {this.state.weatherData && (\n          <CurrentWeather\n            city={this.state.currentCity}\n            data={this.state.weatherData}\n            units={this.state.units}\n          />\n        )}\n        {this.state.forecastData && (\n          <ForecastWeather\n            city={this.state.currentCity}\n            data={this.state.forecastData}\n            units={this.state.units}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}